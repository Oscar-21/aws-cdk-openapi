openapi: 3.0.1
info:
  version: "1.0.3"
  title: NymblAWSCostAPI
  description: |
    # Introduction
    This API is documented in **OpenAPI format**.

    ## How the data is stored and retrieved.
    The **AWS CostExplorer** API is quite expensive. So instead of exposing endpoints directly we
    store the data in DynamoDB and update it monthly.

    # Monthly Cost Reporting
    This **/costs/accounts** will return either all monthly costs separated by internal and external account.
    Or it will return  subsection based off the start and end dates in the request

    ## Scheduled Updates
    This API exposes an endpoint to update the cost records. This is only used internally via an **AWS EventBridge Scheduled Event**.
    It will update for the previous month on the 8th of every month.

    # Authentication

    NymblAwsCostApi offers one form of authentication:
      - API Key
    <SecurityDefinitions />

  contact:
    name: API Support
    email: austin@nymbl.app
    url: https://todo.com

  x-logo:
    url: 'https://assets-global.website-files.com/635aa29ce589b950d718bcf0/6362c908be834825c61adf33_nymbl.png'
    altText: Nymbl logo
servers:
  - url: https://openapiblog.heoureialwed.com

externalDocs:
  description: Private Repo for the API Code.
  url: 'https://todo.com'

tags:
  - name: AWS Monthly Cost By Client
    description: Operations about monthly costs
  - name: aws_account_cost
    x-displayName: The AwsAccountCost Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/AwsCostsByAllAccounts" />
x-tagGroups:
  - name: General
    tags:
      - AWS Monthly Cost By Client
  - name: Models
    tags:
      - aws_account_cost

paths:
  /cost/accounts:
    options:
      security:
        - api_key: []
      summary: Options Request for cors configuration
      description: Preflight request to check cors headers
      responses:
        '200':
          description: CORS support
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          
    get: 
      security:
        - api_key: []
      tags:
        - AWS Monthly Cost By Client
      summary: Get AWSCostsByAllAccounts.
      description: Costs for all aws accounts, separated by internal and external accounts.
      operationId: getAWSCostsByAllAccounts
      parameters:
        - name: start
          in: query
          description: The start and end date for which you want cost data.
          required: false
          schema:
            type: string
            format: date
            description: start date in YYYY-MM format
            example: 2023-04
        - name: end
          in: query
          description: The start and end date for which you want cost data.
          required: false
          schema:
            type: string
            format: date
            description: start date in YYYY-MM format
            example: 2023-05
      responses:
        '200':
          $ref: '#/components/responses/AwsCostsByAllAccounts'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    post:
      tags:
        - AWS Monthly Cost By Client
      summary: Create Aws Account Cost Records for a single month
      description: >-
        Endpoint to be used by dynamodb to cache the cost explorer api requests.
        Since the API is quite expensive, we update the data monthly and expose the
        stored data via the '/cost/accounts' endpoint.
      operationId: createSingleMonthAwsAccountCostRecord
      requestBody:
        $ref: '#/components/requestBodies/AwsOneMonthSingleAccountCosts'
      responses:
        '201':
          description: Created
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
  /ping:
    options:
      responses:
        '200':
          description: CORS support
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
    get:
      summary: Server heartbeat operation
      description: >-
        Ping the service.
      operationId: getPing
      responses:
        '200':
          description: OK
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"

components:
  requestBodies:
    AwsOneMonthSingleAccountCosts:
      description: A list of single accounts and their cost for a single month/year combination.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsSingleAccountCostsRequest'
  responses:
    AwsCostsByAllAccounts:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCostsByAllAccounts'
  schemas:

    DateSelectionYearRequired:
      type: object
      properties:
        year:
          type: integer
          minimum: 2023
          example: 2023
        month:
          type: string
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
          example: FEBRUARY
      example:
        year: 2023
      required:
        - year

    DateSelectionMonthAndYearRequired:
      type: object
      properties:
        year:
          type: integer
          minimum: 2023
          example: 2024
        month:
          type: string
          example: FEBRUARY
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
      example:
        year: 2024
        month: NOVEMBER
      required:
        - year
        - month

    TimePeriodOnlyStartRequired:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/DateSelectionYearRequired'
          example:
            month: JUNE
            year: 2023
        end:
          $ref: '#/components/schemas/DateSelectionYearRequired'
          example:
            month: JULY
            year: 2023
      required:
        - start
      example:
        start:
          year: 2023

    TimePeriodStartAndEndRequired:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/DateSelectionYearRequired'
        end:
          $ref: '#/components/schemas/DateSelectionYearRequired'
      required:
        - start
        - end
      example:
        start:
          year: 2023
        end:
          year: 2024
          month: APRIL


    AwsSingleAccountCost:
      type: object
      properties:
        accountId:
          type: string
          example: "123456789012"
        name:
          type: string
          example: "Acme Inc"
        cost:
          type: number
          example: 344.55
        timePeriod:
          $ref: '#/components/schemas/TimePeriodStartAndEndRequired'
          example:
            start:
              year: 2023,
              month: OCTOBER
            end:
              year: 2023,
              month: NOVEMBER
      required:
        - accountId
        - name
        - cost
        - timePeriod
      example: {
        "accountId": "1234567",
        "name": "Foo",
        "cost": 33.21,
        "timePeriod": {
          "start": {
            "year": 2023,
            "month": "OCTOBER"
          },
          "end": {
            "year": 2023,
            "month": "NOVEMBER"
          }
        }
      }

    AwsSingleAccountCostWithoutTimePeriod:
      type: object
      properties:
        accountId:
          type: string
          example: 123456789012
        name:
          type: string
          example: Nymbl
        cost:
          type: number
          example: 3214.32
      required:
        - accountId
        - name
        - cost
      example: {
        "accountId": "1234567",
        "name": "Foo",
        "cost": 33.21,
      }

    AwsSingleAccountCostsRequest:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AwsSingleAccountCostWithoutTimePeriod'
          uniqueItems: true
        monthYearSelection:
          $ref: '#/components/schemas/DateSelectionMonthAndYearRequired'
      example: {
        "accounts": [
          {
            "accountId": "1234567",
            "name": "Foo",
            "cost": 33.21,
          },
          {
            "accountId": "1234567",
            "name": "Foo",
            "cost": 33.21,
          }
        ],
        "monthYearSelection": {
          "year": 2023,
          "month": "OCTOBER"
        }
      }

    AwsSingleAccountCostList:
      type: array
      items:
        $ref: '#/components/schemas/AwsSingleAccountCost'
      uniqueItems: true
      example: [
        {
          "accountId": "1234567",
          "name": "Foo",
          "cost": 33.21,
          "timePeriod": {
            "start": {
              "year": 2023,
              "month": "OCTOBER"
            },
            "end": {
              "year": 2023,
              "month": "NOVEMBER"
            }
          }
        },
        {
          "accountId": "1234567373879",
          "name": "Bar",
          "cost": 1113.21,
          "timePeriod": {
            "start": {
              "year": 2023,
              "month": "OCTOBER"
            },
            "end": {
              "year": 2023,
              "month": "NOVEMBER"
            }
          }
        }
      ]

    AwsCostsByAllAccounts:
      type: object
      properties:
        timePeriod:
          $ref: '#/components/schemas/TimePeriodOnlyStartRequired'
        internal:
          $ref: '#/components/schemas/AwsSingleAccountCostList'
        external:
          $ref: '#/components/schemas/AwsSingleAccountCostList'
      example:
        timePeriod:
          start:
            year: 2023
        internal:
          - accountId: '1234567'
            name: Foo
            cost: 33.21
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
          - accountId: '13389343987'
            name: Bar
            cost: 822.21
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
        external:
          - accountId: '1234567'
            name: SomeOtherAccount
            cost: 33.21
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
          - accountId: '13389343987'
            name: ExternalAccountBar
            cost: 822.21
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER

  securitySchemes:
    #petstore_auth:
    #  description: |
    #   Get access to data while protecting your account credentials.
    #   OAuth2 is also a safer and more secure way to give you access.
    # type: oauth2
    # flows:
    #   implicit:
    #     authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    #     scopes:
    #       'write:pets': modify pets in your account
    #       'read:pets': read your pets
    api_key:
      description: >
        An X-Api-Key provided from the API developers to authorized client applications.
      type: apiKey
      name: X-Api-Key
      in: header
