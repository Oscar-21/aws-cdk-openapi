openapi: 3.0.1
info:
  version: "1.0.3"
  title: Nymbl AWS Cost API
  description: |
    ## Using the API
    #### Get All Cost Records
    `GET` `/costs/accounts` endpoint with no *query parameters* will return all cost records.
    <br />
    <br />
    #### Get Cost Records starting from a specific `year-month`
    `GET` `/costs/accounts/?start=2023-10` will return all records from `2023-10` to the most current data.
    <br />
    <br />
    #### Get Cost Records for a single month.
    `GET` `/costs/accounts/?start=2023-10&end=2023-10` will return all records from `2023-10` to the most current data.
    <br />
    <br />
    ## Creating new Monthly Cost Data Records
    `POST` `/costs/accounts` is an internal method used to update the cost records store in **DynamoDB**
    <br />
    <br />
    #### Scheduled Updates
    This API exposes an endpoint to update the cost records. This is only used internally via an **AWS EventBridge Scheduled Event**.
    It will update for the previous month on the 8th of every month.
    # Authentication
    Nymbl Aws Cost API offers one form of authentication:
      - API Key
    <SecurityDefinitions />

  contact:
    name: API Support
    email: austin@nymbl.app
    url: https://todo.com

  x-logo:
    url: 'https://assets-global.website-files.com/635aa29ce589b950d718bcf0/6362c908be834825c61adf33_nymbl.png'
    altText: Nymbl logo
servers:
  - url: https://openapiblog.heoureialwed.com

externalDocs:
  description: Private Repo for the API Code.
  url: 'https://todo.com'

tags:
  - name: aws_account_cost
    x-displayName: Nymbl Aws Costs By Account
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/AwsCostByAccounts" />
  - name: aws_account_cost_single
    x-displayName: A Single AWS Account Cost Record
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/AwsAccountCost" />
x-tagGroups:
  - name: General
    tags:
      - aws_account_cost
  - name: Models
    tags:
      - aws_account_cost
      - aws_account_cost_single

paths:
  /cost/accounts:
    options:
      security:
        - api_key: []
      summary: Options Request for cors configuration
      description: Preflight request to check cors headers
      responses:
        '200':
          description: CORS support
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          
    get: 
      security:
        - api_key: []
      tags:
        - aws_account_cost
      summary: Total AWS Costs By Account.
      description: Costs for all aws accounts, separated by internal and external accounts.
      operationId: getAWSCostsByAllAccounts
      parameters:
        - name: start
          in: query
          description: The start and end date for which you want cost data.
          required: false
          schema:
            type: string
            format: date
            description: start date in yyyy-MM format
            example: 2023-04
        - name: end
          in: query
          description: The start and end date for which you want cost data.
          required: false
          schema:
            type: string
            format: date
            description: start date in yyyy-MM format
            example: 2023-05
      responses:
        '200':
          $ref: '#/components/responses/AwsAccountCostResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    post:
      tags:
        - aws_account_cost
      summary: Create Aws Account Cost Records for a single month
      description: >-
        Endpoint to be used by dynamodb to cache the cost explorer api requests.
        Since the API is quite expensive, we update the data monthly and expose the
        stored data via the '/cost/accounts' endpoint.
      operationId: createSingleMonthAwsAccountCostRecord
      requestBody:
        $ref: '#/components/requestBodies/AwsAccountCostRequest'
      responses:
        '201':
          description: Created
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
  /ping:
    options:
      responses:
        '200':
          description: CORS support
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
    get:
      summary: Server heartbeat operation
      description: >-
        Ping the service.
      operationId: getPing
      responses:
        '200':
          description: OK
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APILambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"

components:
  requestBodies:
    AwsAccountCostRequest:
      description: A list of single accounts and their cost for a single month/year combination.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCostByAccounts'
  responses:
    AwsAccountCostResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwsCostByAccounts'
  schemas:
    MonthYearSelection:
      type: object
      properties:
        year:
          type: integer
          minimum: 2023
          example: 2023
        month:
          type: string
          example: NOVEMBER
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
      example:
        year: 2023
        month: DECEMBER
      required:
        - year
        - month

    TimePeriod:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/MonthYearSelection'
        end:
          $ref: '#/components/schemas/MonthYearSelection'
      required:
        - start
        - end
      example:
        start:
          year: 2023
          month: JUNE
        end:
          year: 2023
          month: JULY


    AwsAccountCost:
      type: object
      properties:
        accountId:
          type: string
          example: 123456789012
        name:
          type: string
          example: Acme Inc
        cost:
          type: number
          example: 344.55
        isInternal:
          type: boolean
        timePeriod:
          $ref: '#/components/schemas/TimePeriod'
          example:
            start:
              year: 2023
              month: OCTOBER
            end:
              year: 2023
              month: NOVEMBER
      required:
        - accountId
        - name
        - cost
        - timePeriod
        - isInternal
      example:
        accountId: 1234567
        name: Foo
        cost: 33.21
        isInternal: true
        timePeriod:
          start:
            year: 2023
            month: OCTOBER
          end:
            year: 2023
            month: NOVEMBER

    AwsCostByAccounts:
      type: object
      properties:
        timePeriod:
          $ref: '#/components/schemas/TimePeriod'
        accounts:
          type: array
          items: 
            $ref: '#/components/schemas/AwsAccountCost'
      example:
        timePeriod:
          start:
            month: JANUARY
            year: 2023
          end:
            month: DECEMBER
            year: 2023
        accounts:
          - accountId: '1234567'
            name: Foo
            cost: 33.21
            isInternal: true
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
          - accountId: 13389343987
            name: Bar
            cost: 822.21
            isInternal: true
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
          - accountId: '1234567'
            name: SomeOtherAccount
            cost: 33.21
            isInternal: false
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER
          - accountId: '13389343987'
            name: ExternalAccountBar
            isInternal: false
            cost: 822.21
            timePeriod:
              start:
                year: 2023
                month: OCTOBER
              end:
                year: 2023
                month: NOVEMBER

  securitySchemes:
    #petstore_auth:
    #  description: |
    #   Get access to data while protecting your account credentials.
    #   OAuth2 is also a safer and more secure way to give you access.
    # type: oauth2
    # flows:
    #   implicit:
    #     authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    #     scopes:
    #       'write:pets': modify pets in your account
    #       'read:pets': read your pets
    api_key:
      description: >
        An X-Api-Key provided from the API developers to authorized client applications.
      type: apiKey
      name: X-Api-Key
      in: header
